#include<stdio.h>

void main()
{
  
  int m,n,r;
  int a[1000][1000];
  int c[4][2]={{0,1},{1,0},{0,-1},{-1.0}};
  int i,j,k,t,f,z=0;
  int i1,j1,i2,j2,k2;
  scanf("%d %d %d",&m,&n,&r);
  int m1=m;
  int n1=n;
  int t1=m;
  int t2=n;
  int x=0,y=-1;
  int x1=0,y1=-1;
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
 
  //To find how many layers are present
  if(n<m)
  f=n;
  else
  f=m;
  f=f/2;
  
  //TO SEPERATE THE LAYERS AS 1D ARRAYS
  for(i=0;i<f;i++)
  {
    int d[1000],z=0;
    for(k=0;k<4;k++)
    {
      if(k%2==0)
      {
        for(j=0;j<n;j++)
        {
          x=x+c[k][0];
          y=y+c[k][1];
          d[z]=a[x][y];
          z++;
        }
      
        n--;
      }
    
      else
      {
        for(j=0;j<m-1;j++)
        {
          x=x+c[k][0];
          y=y+c[k][1];
          d[z]=a[x][y];
          z++;
        }
      
        m--;
      }
      
      
    }
  

    //CIRCULAR RORATION OF THE ARRAY
      for(i1=0;i1<r;i1++)
        {
           int temp=d[0];
            for(j1=0;j1<z-1;j1++)
                {
                d[j1]=d[j1+1];
            } 
              
            d[z-1]=temp;
        }
 

 //FILLING THE MATRIX AGAIN WITH THE ROTATED NUMBERS
 
 int z1=0;
 
 for(k2=0;k2<4;k2++)
    {
      if(k2%2==0)
      {
        for(j2=0;j2<n1;j2++)
        {
          x1=x1+c[k2][0];
          y1=y1+c[k2][1];
          a[x1][y1]=d[z1];
          z1++;
        }
      
        n1--;
      }
    
      else
      {
        for(j2=0;j2<m1-1;j2++)
        {
          x1=x1+c[k2][0];
          y1=y1+c[k2][1];
          a[x1][y1]=d[z1];
          z1++;
        }
      
        m1--;
      }
      
      
    }
    
    
    
  }
  
  printf("\nThe Rotated Matrix is\n\n");
  
  for(i=0;i<t1;i++)
  {
      for(j=0;j<t2;j++)
      {
        printf("%d ",a[i][j]);
      }
      
      printf("\n");
  }
  
  
}
